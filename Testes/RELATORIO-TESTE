RM81688   Guilherme Arthur dos Ramos Toteio

package nac1;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class TesteNac {
	String respostaPrisioneiroA = "Culpado", 
		   respostaPrisioneiraB = "Culpado";
	JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
	@Test
	void test() {
		int julgamento = jp.calculaPena(respostaPrisioneiroA,respostaPrisioneiraB);
	}

}


Primeiro teste
Erro:	
	java.lang.Error: Unresolved compilation problem: 
	The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
Conclusão:
	Necessita alterar a tipagem do parametro
Código JAVA Alterado:
	 public int calculaPena(String respostaPrisioneiroA, String respostaPrisioneiroB) {

Segundo teste

Erro:
	java.lang.Error: Unresolved compilation problems: 
	Resposta cannot be resolved to a variable
	Resposta cannot be resolved to a variable
	Resposta cannot be resolved to a variable

Conclusão:
	Necessita criação de um ENUM Delação
	
Código JAVA Alterado:
	   public enum Resposta{
		   DELACAO
	   }
	   
	   public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
	   
	   
Versão Final JUNIT: 
package nac1;

import org.junit.Assert;
import org.junit.jupiter.api.Test;

import nac1.JulgamentoPrisioneiro.Resposta;

class TesteNac {
	Resposta respostaPrisioneiroA = Resposta.DELACAO; 
	Resposta respostaPrisioneiraB = Resposta.DELACAO ;
	
	JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
	int respostaEsperada = 15;
	
	@Test
	void test() {
		int julgamento = jp.calculaPena(respostaPrisioneiroA,respostaPrisioneiraB);
		Assert.assertEquals(respostaEsperada, julgamento);
	}

}


Versão Final JAVA:
package nac1;

public class JulgamentoPrisioneiro {
	   private int PENA_INOCENCIA = 10;
	   private int PENA_CONDENACAO_MUTUA = 15;
	   private int PENA_CONDENACAO_INDIVIDUAL = 10;
	   private int PENA_CONDENACAO_CUMPLICES = 11;
	
	   public enum Resposta{
		   DELACAO
	   }
	   
	   public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
	      if (respostaPrisioneiroA == Resposta.DELACAO) {
	          if (respostaPrisioneiroB == Resposta.DELACAO) {
	            return PENA_CONDENACAO_MUTUA;
	          } else {
	                 return PENA_INOCENCIA;
	                 }
	       } else {
	                if (respostaPrisioneiroB == Resposta.DELACAO) {
	                    return PENA_CONDENACAO_INDIVIDUAL;
	                } else {
	                         return PENA_CONDENACAO_CUMPLICES;
	                        }
	                }
	     }
	}


